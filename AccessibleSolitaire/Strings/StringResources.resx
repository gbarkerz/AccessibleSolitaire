<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessibleSolitaireVersion" xml:space="preserve">
    <value>Accessible Solitaire V2.17</value>
  </data>
  <data name="Ace" xml:space="preserve">
    <value>Ace</value>
  </data>
  <data name="AllUpturnedCardsTurnedBack" xml:space="preserve">
    <value>All upturned cards turned back</value>
  </data>
  <data name="AnnounceState" xml:space="preserve">
    <value>Screen reader announce game state</value>
  </data>
  <data name="CanBeMovedTo" xml:space="preserve">
    <value>can be moved to</value>
  </data>
  <data name="Card" xml:space="preserve">
    <value>Card</value>
  </data>
  <data name="CardPile1" xml:space="preserve">
    <value>Pile 1</value>
  </data>
  <data name="CardPile2" xml:space="preserve">
    <value>Pile 2</value>
  </data>
  <data name="CardPile3" xml:space="preserve">
    <value>Pile 3</value>
  </data>
  <data name="CardPile4" xml:space="preserve">
    <value>Pile 4</value>
  </data>
  <data name="CardPile5" xml:space="preserve">
    <value>Pile 5</value>
  </data>
  <data name="CardPile6" xml:space="preserve">
    <value>Pile 6</value>
  </data>
  <data name="CardPile7" xml:space="preserve">
    <value>Pile 7</value>
  </data>
  <data name="Cards" xml:space="preserve">
    <value>Cards</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Clubs" xml:space="preserve">
    <value>Clubs</value>
  </data>
  <data name="ClubsPile" xml:space="preserve">
    <value>Clubs pile</value>
  </data>
  <data name="Congratulations" xml:space="preserve">
    <value>Congratulations</value>
  </data>
  <data name="DealtCardPile" xml:space="preserve">
    <value>Dealt card pile</value>
  </data>
  <data name="DealtCardPiles" xml:space="preserve">
    <value>Dealt card piles</value>
  </data>
  <data name="Diamonds" xml:space="preserve">
    <value>Diamonds</value>
  </data>
  <data name="DiamondsPile" xml:space="preserve">
    <value>Diamonds pile</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>Empty</value>
  </data>
  <data name="EmptyCardPile" xml:space="preserve">
    <value>Empty card pile</value>
  </data>
  <data name="FaceDown" xml:space="preserve">
    <value>Face-down</value>
  </data>
  <data name="FaceDownCardsCannotBeSelected" xml:space="preserve">
    <value>Face-down cards cannot be selected.</value>
  </data>
  <data name="FirstRunMessage" xml:space="preserve">
    <value>Welcome to the Accessible Solitaire game!

Please click the Menu button and review the Help content to learn how to get the best game-playing experiences for you.</value>
  </data>
  <data name="GameRestarted" xml:space="preserve">
    <value>The game has restarted.</value>
  </data>
  <data name="Hearts" xml:space="preserve">
    <value>Hearts</value>
  </data>
  <data name="HeartsPile" xml:space="preserve">
    <value>Hearts pile</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Accessible Solitaire Help</value>
  </data>
  <data name="InDealtCardPile" xml:space="preserve">
    <value>in dealt card pile</value>
  </data>
  <data name="Jack" xml:space="preserve">
    <value>Jack</value>
  </data>
  <data name="King" xml:space="preserve">
    <value>King</value>
  </data>
  <data name="Menu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="MoreCardsAreAvailable" xml:space="preserve">
    <value>More cards are available to turn over</value>
  </data>
  <data name="Moved" xml:space="preserve">
    <value>Moved</value>
  </data>
  <data name="NextCardPile_NextCard" xml:space="preserve">
    <value>Next card</value>
  </data>
  <data name="NextCardPile_TurnOverCards" xml:space="preserve">
    <value>Turn over cards</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NoCard" xml:space="preserve">
    <value>No card</value>
  </data>
  <data name="NoCardLeft" xml:space="preserve">
    <value>No cards left in remaining cards pile</value>
  </data>
  <data name="NoMoveIsAvailable" xml:space="preserve">
    <value>No move is available.</value>
  </data>
  <data name="ObscuredUpturnedCardCannotBeSelected" xml:space="preserve">
    <value>This card is not at the top of the upturned card pile, and cannot be selected.</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>of </value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>off</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>on</value>
  </data>
  <data name="OnTop" xml:space="preserve">
    <value>on top</value>
  </data>
  <data name="Pile" xml:space="preserve">
    <value>Pile</value>
  </data>
  <data name="Queen" xml:space="preserve">
    <value>Queen</value>
  </data>
  <data name="QueryRestartGame" xml:space="preserve">
    <value>Are you sure you want to restart the game?</value>
  </data>
  <data name="QueryRestartWonGame" xml:space="preserve">
    <value>Congratulations, you've won! Would you like to start a new game?</value>
  </data>
  <data name="RestartGame" xml:space="preserve">
    <value>Restart Game</value>
  </data>
  <data name="Revealed" xml:space="preserve">
    <value>revealed</value>
  </data>
  <data name="AccessibleSolitaire" xml:space="preserve">
    <value>Accessible Solitaire</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ShowScreenReaderAnnouncementButtons" xml:space="preserve">
    <value>Screen Reader Announcements</value>
  </data>
  <data name="ShowScreenReaderAnnouncementButtonsSwitchLabel" xml:space="preserve">
    <value>Show screen reader buttons:</value>
  </data>
  <data name="ShowScreenReaderAnnouncementButtonsInstructions" xml:space="preserve">
    <value>Show buttons to have a screen reader announce the state of the entire game, and the moves currently available.</value>
  </data>
  <data name="Spades" xml:space="preserve">
    <value>Spades</value>
  </data>
  <data name="SpadesPile" xml:space="preserve">
    <value>Spades pile</value>
  </data>
  <data name="TargetCardPiles" xml:space="preserve">
    <value>Target card piles</value>
  </data>
  <data name="Then" xml:space="preserve">
    <value>then</value>
  </data>
  <data name="ThereAreNoUpturnedCards" xml:space="preserve">
    <value>There are no upturned cards shown</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="TopUpturnedCardIs" xml:space="preserve">
    <value>Top upturned card is</value>
  </data>
  <data name="Unselected" xml:space="preserve">
    <value>unselected</value>
  </data>
  <data name="UpturnedCards" xml:space="preserve">
    <value>Upturned Cards</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="CardTurnCount" xml:space="preserve">
    <value>Number of cards turned up</value>
  </data>
  <data name="CardTurnCountInstructions" xml:space="preserve">
    <value>How many cards would you like to be turned up when the Next Card button is clicked?</value>
  </data>
  <data name="CardTurnCountPicker" xml:space="preserve">
    <value>Card turn up count:</value>
  </data>
  <data name="KingsOnlyToEmptyPile" xml:space="preserve">
    <value>Empty Dealt Card Pile</value>
  </data>
  <data name="KingsOnlyToEmptyPileInstructions" xml:space="preserve">
    <value>Any card can be moved to an empty dealt card pile. If you'd prefer that only Kings can be moved to the empty card pile, select this option.</value>
  </data>
  <data name="KingsOnlyToEmptyPileSwitchName" xml:space="preserve">
    <value>Only Kings to empty card piles:</value>
  </data>
  <data name="ShowRankSuitLarge" xml:space="preserve">
    <value>Card rank and suit display</value>
  </data>
  <data name="ShowRankSuitLargeInstructions" xml:space="preserve">
    <value>Check this option if you'd like each card to show a large suit symbol and a large letter representing the card's rank.</value>
  </data>
  <data name="ShowRankSuitLargeSwitchName" xml:space="preserve">
    <value>Show large rank and suit:</value>
  </data>
  <data name="Popup" xml:space="preserve">
    <value>Popup</value>
  </data>
  <data name="AllowSelectionByFaceDownCard" xml:space="preserve">
    <value>Dealt card selection</value>
  </data>
  <data name="AllowSelectionByFaceDownCardInstructions" xml:space="preserve">
    <value>Check this option if you'd like to tap any face-down card in a dealt card pile to select the nearest face-up card in the same pile.</value>
  </data>
  <data name="AllowSelectionByFaceDownCardSwitchLabel" xml:space="preserve">
    <value>Select via face-down card:</value>
  </data>
  <data name="AllowSelectionByFaceDownCardButtonLabel" xml:space="preserve">
    <value>Highlight selected card set:</value>
  </data>
  <data name="InSelectedSet" xml:space="preserve">
    <value>in selected set</value>
  </data>
  <data name="Selected" xml:space="preserve">
    <value>selected</value>
  </data>
  <data name="MergeFaceDownCards" xml:space="preserve">
    <value>Face-down cards</value>
  </data>
  <data name="MergeFaceDownCardsInstructions" xml:space="preserve">
    <value>Check this option if you'd like all face-down cards in each dealt card pile to be merged into a single item that shows the count of face-down cards in the pile.</value>
  </data>
  <data name="MergeFaceDownCardsSwitchLabel" xml:space="preserve">
    <value>Merge face-down cards:</value>
  </data>
  <data name="PlaySoundSuccessfulMove" xml:space="preserve">
    <value>Play a sound when a card move attempt is successful.</value>
  </data>
  <data name="PlaySoundUnsuccessfulMove" xml:space="preserve">
    <value>Play a sound when a card move attempt is unsuccessful.</value>
  </data>
  <data name="PlaySoundSuccessfulMoveSwitchLabel" xml:space="preserve">
    <value>Successful sound:</value>
  </data>
  <data name="PlaySoundUnsuccessfulMoveSwitchLabel" xml:space="preserve">
    <value>Unsuccessful sound:</value>
  </data>
  <data name="Sounds" xml:space="preserve">
    <value>Sounds</value>
  </data>
  <data name="FlipGameLayoutHorizontally" xml:space="preserve">
    <value>Flip layout horizontally</value>
  </data>
  <data name="FlipGameLayoutHorizontallyInstructions" xml:space="preserve">
    <value>Check this option to flip the position of everything in the game horizontally. This means the Next Card button will be near the top right corner of the game rather than near the top left corner.</value>
  </data>
  <data name="FlipGameLayoutHorizontallySwitchLabel" xml:space="preserve">
    <value>Flip layout:</value>
  </data>
  <data name="PlaySoundOther" xml:space="preserve">
    <value>Play other sounds including when dealing cards or turning over the next cards.</value>
  </data>
  <data name="PlaySoundOtherSwitchLabel" xml:space="preserve">
    <value>Other sounds:</value>
  </data>
  <data name="ExtendDealtCardHitTarget" xml:space="preserve">
    <value>Extend dealt card hit target</value>
  </data>
  <data name="ExtendDealtCardHitTargetSwitchLabel" xml:space="preserve">
    <value>Extend hit target:</value>
  </data>
  <data name="ExtendDealtCardHitTargetInstructions" xml:space="preserve">
    <value>This setting only applies using a portrait screen orientation. When checked, the hit target for each of the topmost dealt cards extends across the width of the screen. The hit target is represented by a solid colour, and the dealt card appears in the middle of the area. Extending the hit target area may make it quicker to find the topmost card in each pile when moving your finger over the screen while using a screen reader.</value>
  </data>
  <data name="SuitColours" xml:space="preserve">
    <value>Suit Colours</value>
  </data>
  <data name="SuitColoursInstructions" xml:space="preserve">
    <value>If you'd prefer to have cards show colours other than the traditional black and red for the four suits, select your preferred colours here.</value>
  </data>
  <data name="SuitColoursClubsPickerLabel" xml:space="preserve">
    <value>Clubs:</value>
  </data>
  <data name="SuitColoursDiamondsPickerLabel" xml:space="preserve">
    <value>Diamonds:</value>
  </data>
  <data name="SuitColoursHeartsPickerLabel" xml:space="preserve">
    <value>Hearts:</value>
  </data>
  <data name="SuitColoursSpadesPickerLabel" xml:space="preserve">
    <value>Spades:</value>
  </data>
  <data name="LongPressOnCard" xml:space="preserve">
    <value>Press and hold on card to zoom</value>
  </data>
  <data name="LongPressOnCardInstructions" xml:space="preserve">
    <value>Press and hold on a card for the card to fill the screen. Select the number of seconds required to press and hold on the card, or select "Never" to turn off the press and hold.</value>
  </data>
  <data name="LongPressOnCardPickerName" xml:space="preserve">
    <value>Seconds:</value>
  </data>
  <data name="GeneralGamePlay" xml:space="preserve">
    <value>General Game Play</value>
  </data>
  <data name="GameAppearance" xml:space="preserve">
    <value>Game Appearance</value>
  </data>
  <data name="ScreenReaderUsage" xml:space="preserve">
    <value>Screen Reader Usage</value>
  </data>
  <data name="TouchInteraction" xml:space="preserve">
    <value>Touch Interaction</value>
  </data>
  <data name="NoNextCardsLeft" xml:space="preserve">
    <value>No next cards left</value>
  </data>
  <data name="KeyboardShortcutsList" xml:space="preserve">
    <value>F1: Show this list of keyboard shortcuts.

F6: Move keyboard focus between the main areas of the game.

M: Screen reader announce available moves.
U: Screen reader announce topmost upturned cards.
T: Screen reader announce target card piles.
D: Screen reader announce dealt card piles.

H: Show full help content in Facebook.
N: Click Next Card button.
R: Restart game.
Z: Show card zoom popup.</value>
  </data>
  <data name="KeyboardShortcutsTitle" xml:space="preserve">
    <value>Keyboard Shortcuts</value>
  </data>
  <data name="KeyboardShortcutsSubtitle" xml:space="preserve">
    <value>The following keyboard shortcuts are available in the Accessible Solitaire game.</value>
  </data>
  <data name="TargetCardPile" xml:space="preserve">
    <value>Target card pile</value>
  </data>
  <data name="UpturnedCardPile" xml:space="preserve">
    <value>Upturned card pile</value>
  </data>
  <data name="In" xml:space="preserve">
    <value>in</value>
  </data>
  <data name="FirstRunMessageWindows" xml:space="preserve">
    <value>Press the F1 key to learn about the keyboard shortcuts available in the game.</value>
  </data>
  <data name="ShowZoomPopup" xml:space="preserve">
    <value>Show zoom popup</value>
  </data>
  <data name="KeepGameAcrossSessions" xml:space="preserve">
    <value>Game Sessions</value>
  </data>
  <data name="KeepGameAcrossSessionsInstructions" xml:space="preserve">
    <value>Save the state of the current game when the app is closed, so when the app is next reopened the earlier game can be continued.</value>
  </data>
  <data name="KeepGameAcrossSessionsSwitchName" xml:space="preserve">
    <value>Save game state:</value>
  </data>
  <data name="CelebrationExperience" xml:space="preserve">
    <value>Celebration Experience</value>
  </data>
  <data name="CelebrationExperienceVisual" xml:space="preserve">
    <value>Visual experience</value>
  </data>
  <data name="CelebrationExperienceVisualInstructions" xml:space="preserve">
    <value>Use this setting to have the target card piles spin round when a game is won.</value>
  </data>
  <data name="CelebrationExperienceVisualSwitchLabel" xml:space="preserve">
    <value>Visual celebration:</value>
  </data>
  <data name="CelebrationExperienceAudio" xml:space="preserve">
    <value>Audio Experience</value>
  </data>
  <data name="CelebrationExperienceAudioSwitchLabel" xml:space="preserve">
    <value>Audio experience:</value>
  </data>
  <data name="CelebrationExperienceAudioInstructions" xml:space="preserve">
    <value>Use this setting to have a celebratory sound played when the game is won.</value>
  </data>
  <data name="AnnounceAvailableMoves" xml:space="preserve">
    <value>Screen reader announce available moves</value>
  </data>
  <data name="1" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="2" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="3" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="4" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="5" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="6" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="7" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="8" xml:space="preserve">
    <value>8</value>
  </data>
  <data name="9" xml:space="preserve">
    <value>9</value>
  </data>
  <data name="10" xml:space="preserve">
    <value>10</value>
  </data>
  <data name="SettingsTitle" xml:space="preserve">
    <value>Accessible Solitaire Settings</value>
  </data>
  <data name="CardOf" xml:space="preserve">
    <value>of </value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Black" xml:space="preserve">
    <value>Black</value>
  </data>
  <data name="DarkRed" xml:space="preserve">
    <value>Dark Red</value>
  </data>
  <data name="DarkOrange" xml:space="preserve">
    <value>Dark Orange</value>
  </data>
  <data name="DarkGold" xml:space="preserve">
    <value>Dark Gold</value>
  </data>
  <data name="DarkGreen" xml:space="preserve">
    <value>Dark Green</value>
  </data>
  <data name="DarkBlue" xml:space="preserve">
    <value>Dark Blue</value>
  </data>
  <data name="DarkIndigo" xml:space="preserve">
    <value>Dark Indigo</value>
  </data>
  <data name="DarkViolet" xml:space="preserve">
    <value>Dark Violet</value>
  </data>
  <data name="White" xml:space="preserve">
    <value>White</value>
  </data>
  <data name="Yellow" xml:space="preserve">
    <value>Yellow</value>
  </data>
  <data name="Pink" xml:space="preserve">
    <value>Pink</value>
  </data>
  <data name="Cyan" xml:space="preserve">
    <value>Cyan</value>
  </data>
  <data name="LightBlue" xml:space="preserve">
    <value>Light Blue</value>
  </data>
  <data name="LightGreen" xml:space="preserve">
    <value>Light Green</value>
  </data>
  <data name="LightCoral" xml:space="preserve">
    <value>Light Coral</value>
  </data>
  <data name="HintBottommostFaceupCard" xml:space="preserve">
    <value>first face-up card is</value>
  </data>
  <data name="AddHintToTopmostCardSwitchLabel" xml:space="preserve">
    <value>Add hint:</value>
  </data>
  <data name="AddHintToTopmostCard" xml:space="preserve">
    <value>Dealt card pile hint</value>
  </data>
  <data name="AddHintToTopmostCardInstructions" xml:space="preserve">
    <value>Add a hint on the topmost card in a dealt card pile saying which card is the bottommost face-up card in that pile.</value>
  </data>
  <data name="IncludeFacedownCardsInAnnouncement" xml:space="preserve">
    <value>Announce face-down card details</value>
  </data>
  <data name="IncludeFacedownCardsInAnnouncementSwitchLabel" xml:space="preserve">
    <value>Announce face-down cards:</value>
  </data>
  <data name="IncludeFacedownCardsInAnnouncementInstructions" xml:space="preserve">
    <value>By default, when the state of the dealt card piles is announced by a screen reader, the names of the face-down cards in each pile are not included. Use this setting to include the names of face-down cards in the announcement.</value>
  </data>
  <data name="Deselected" xml:space="preserve">
    <value>Deselected</value>
  </data>
  <data name="NextCardPile_FinishedCards" xml:space="preserve">
    <value>All cards have been used</value>
  </data>
  <data name="NoMoreFaceupCards" xml:space="preserve">
    <value>No more face-up cards</value>
  </data>
</root>