//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sa11ytaire4All.Strings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Sa11ytaire4All.Strings.StringResources", typeof(StringResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1.
        /// </summary>
        internal static string _1 {
            get {
                return ResourceManager.GetString("1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 10.
        /// </summary>
        internal static string _10 {
            get {
                return ResourceManager.GetString("10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2.
        /// </summary>
        internal static string _2 {
            get {
                return ResourceManager.GetString("2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3.
        /// </summary>
        internal static string _3 {
            get {
                return ResourceManager.GetString("3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 4.
        /// </summary>
        internal static string _4 {
            get {
                return ResourceManager.GetString("4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 5.
        /// </summary>
        internal static string _5 {
            get {
                return ResourceManager.GetString("5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 6.
        /// </summary>
        internal static string _6 {
            get {
                return ResourceManager.GetString("6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 7.
        /// </summary>
        internal static string _7 {
            get {
                return ResourceManager.GetString("7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 8.
        /// </summary>
        internal static string _8 {
            get {
                return ResourceManager.GetString("8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 9.
        /// </summary>
        internal static string _9 {
            get {
                return ResourceManager.GetString("9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessible Solitaire.
        /// </summary>
        internal static string AccessibleSolitaire {
            get {
                return ResourceManager.GetString("AccessibleSolitaire", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessible Solitaire V2.30.
        /// </summary>
        internal static string AccessibleSolitaireVersion {
            get {
                return ResourceManager.GetString("AccessibleSolitaireVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ace.
        /// </summary>
        internal static string Ace {
            get {
                return ResourceManager.GetString("Ace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dealt card pile hint.
        /// </summary>
        internal static string AddHintToTopmostCard {
            get {
                return ResourceManager.GetString("AddHintToTopmostCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a hint on the topmost card in a dealt card pile saying which card is the bottommost face-up card in that pile..
        /// </summary>
        internal static string AddHintToTopmostCardInstructions {
            get {
                return ResourceManager.GetString("AddHintToTopmostCardInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add hint:.
        /// </summary>
        internal static string AddHintToTopmostCardSwitchLabel {
            get {
                return ResourceManager.GetString("AddHintToTopmostCardSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dealt card selection.
        /// </summary>
        internal static string AllowSelectionByFaceDownCard {
            get {
                return ResourceManager.GetString("AllowSelectionByFaceDownCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highlight selected card set:.
        /// </summary>
        internal static string AllowSelectionByFaceDownCardButtonLabel {
            get {
                return ResourceManager.GetString("AllowSelectionByFaceDownCardButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check this option if you&apos;d like to tap any face-down card in a dealt card pile to select the nearest face-up card in the same pile..
        /// </summary>
        internal static string AllowSelectionByFaceDownCardInstructions {
            get {
                return ResourceManager.GetString("AllowSelectionByFaceDownCardInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select via face-down card:.
        /// </summary>
        internal static string AllowSelectionByFaceDownCardSwitchLabel {
            get {
                return ResourceManager.GetString("AllowSelectionByFaceDownCardSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All upturned cards turned back..
        /// </summary>
        internal static string AllUpturnedCardsTurnedBack {
            get {
                return ResourceManager.GetString("AllUpturnedCardsTurnedBack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available moves.
        /// </summary>
        internal static string AnnounceAvailableMoves {
            get {
                return ResourceManager.GetString("AnnounceAvailableMoves", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game state.
        /// </summary>
        internal static string AnnounceState {
            get {
                return ResourceManager.GetString("AnnounceState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic announcements.
        /// </summary>
        internal static string AutomaticallyAnnounceMovesSwitch {
            get {
                return ResourceManager.GetString("AutomaticallyAnnounceMovesSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this setting to have the screen reader automatically announce available moves in the game following the move of a card. Please note that the announcement does not include moves of cards to empty dealt card piles, or moves of cards from the target card piles down to the dealt card piles..
        /// </summary>
        internal static string AutomaticallyAnnounceMovesSwitchInstructions {
            get {
                return ResourceManager.GetString("AutomaticallyAnnounceMovesSwitchInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic move announcement:.
        /// </summary>
        internal static string AutomaticallyAnnounceMovesSwitchLabel {
            get {
                return ResourceManager.GetString("AutomaticallyAnnounceMovesSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Black.
        /// </summary>
        internal static string Black {
            get {
                return ResourceManager.GetString("Black", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to can be moved to.
        /// </summary>
        internal static string CanBeMovedTo {
            get {
                return ResourceManager.GetString("CanBeMovedTo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Card.
        /// </summary>
        internal static string Card {
            get {
                return ResourceManager.GetString("Card", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Headings.
        /// </summary>
        internal static string CardButtonsHeadingState {
            get {
                return ResourceManager.GetString("CardButtonsHeadingState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make the top-most upturned card and all target card piles headings for faster VoiceOver navigation. Please note that if these headings are enabled, Accessible Solitaire may not be usable with iOS Voice Control. So turn this setting off if you plan to play the game using Voice Control..
        /// </summary>
        internal static string CardButtonsHeadingStateInstructions {
            get {
                return ResourceManager.GetString("CardButtonsHeadingStateInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set as headings:.
        /// </summary>
        internal static string CardButtonsHeadingStateSwitchLabel {
            get {
                return ResourceManager.GetString("CardButtonsHeadingStateSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to of .
        /// </summary>
        internal static string CardOf {
            get {
                return ResourceManager.GetString("CardOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pile 1.
        /// </summary>
        internal static string CardPile1 {
            get {
                return ResourceManager.GetString("CardPile1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pile 2.
        /// </summary>
        internal static string CardPile2 {
            get {
                return ResourceManager.GetString("CardPile2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pile 3.
        /// </summary>
        internal static string CardPile3 {
            get {
                return ResourceManager.GetString("CardPile3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pile 4.
        /// </summary>
        internal static string CardPile4 {
            get {
                return ResourceManager.GetString("CardPile4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pile 5.
        /// </summary>
        internal static string CardPile5 {
            get {
                return ResourceManager.GetString("CardPile5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pile 6.
        /// </summary>
        internal static string CardPile6 {
            get {
                return ResourceManager.GetString("CardPile6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pile 7.
        /// </summary>
        internal static string CardPile7 {
            get {
                return ResourceManager.GetString("CardPile7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cards.
        /// </summary>
        internal static string Cards {
            get {
                return ResourceManager.GetString("Cards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of cards turned up.
        /// </summary>
        internal static string CardTurnCount {
            get {
                return ResourceManager.GetString("CardTurnCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How many cards would you like to be turned up when the Next Card button is clicked?.
        /// </summary>
        internal static string CardTurnCountInstructions {
            get {
                return ResourceManager.GetString("CardTurnCountInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Card turn up count:.
        /// </summary>
        internal static string CardTurnCountPicker {
            get {
                return ResourceManager.GetString("CardTurnCountPicker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Celebration Experience.
        /// </summary>
        internal static string CelebrationExperience {
            get {
                return ResourceManager.GetString("CelebrationExperience", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio Experience.
        /// </summary>
        internal static string CelebrationExperienceAudio {
            get {
                return ResourceManager.GetString("CelebrationExperienceAudio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Celebration Sound.
        /// </summary>
        internal static string CelebrationExperienceAudioFile {
            get {
                return ResourceManager.GetString("CelebrationExperienceAudioFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the sound that you&apos;d like to be played when a game is won. The Brass Fanfare sound is used with the following license: intro brass 01.wav by klankbeeld. https://freesound.org/s/254644/ -- License: Attribution 4.0.
        /// </summary>
        internal static string CelebrationExperienceAudioFileInstructions {
            get {
                return ResourceManager.GetString("CelebrationExperienceAudioFileInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound:.
        /// </summary>
        internal static string CelebrationExperienceAudioFilePickerLabel {
            get {
                return ResourceManager.GetString("CelebrationExperienceAudioFilePickerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this setting to have a celebratory sound played when the game is won..
        /// </summary>
        internal static string CelebrationExperienceAudioInstructions {
            get {
                return ResourceManager.GetString("CelebrationExperienceAudioInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio experience:.
        /// </summary>
        internal static string CelebrationExperienceAudioSwitchLabel {
            get {
                return ResourceManager.GetString("CelebrationExperienceAudioSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visual experience.
        /// </summary>
        internal static string CelebrationExperienceVisual {
            get {
                return ResourceManager.GetString("CelebrationExperienceVisual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this setting to have the target card piles spin round when a game is won..
        /// </summary>
        internal static string CelebrationExperienceVisualInstructions {
            get {
                return ResourceManager.GetString("CelebrationExperienceVisualInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visual celebration:.
        /// </summary>
        internal static string CelebrationExperienceVisualSwitchLabel {
            get {
                return ResourceManager.GetString("CelebrationExperienceVisualSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close menu.
        /// </summary>
        internal static string CloseMenu {
            get {
                return ResourceManager.GetString("CloseMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clubs.
        /// </summary>
        internal static string Clubs {
            get {
                return ResourceManager.GetString("Clubs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clubs pile.
        /// </summary>
        internal static string ClubsPile {
            get {
                return ResourceManager.GetString("ClubsPile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congratulations.
        /// </summary>
        internal static string Congratulations {
            get {
                return ResourceManager.GetString("Congratulations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cyan.
        /// </summary>
        internal static string Cyan {
            get {
                return ResourceManager.GetString("Cyan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark Blue.
        /// </summary>
        internal static string DarkBlue {
            get {
                return ResourceManager.GetString("DarkBlue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark Gold.
        /// </summary>
        internal static string DarkGold {
            get {
                return ResourceManager.GetString("DarkGold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark Green.
        /// </summary>
        internal static string DarkGreen {
            get {
                return ResourceManager.GetString("DarkGreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark Indigo.
        /// </summary>
        internal static string DarkIndigo {
            get {
                return ResourceManager.GetString("DarkIndigo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark Orange.
        /// </summary>
        internal static string DarkOrange {
            get {
                return ResourceManager.GetString("DarkOrange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark Red.
        /// </summary>
        internal static string DarkRed {
            get {
                return ResourceManager.GetString("DarkRed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark Violet.
        /// </summary>
        internal static string DarkViolet {
            get {
                return ResourceManager.GetString("DarkViolet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dealt card pile.
        /// </summary>
        internal static string DealtCardPile {
            get {
                return ResourceManager.GetString("DealtCardPile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dealt card piles.
        /// </summary>
        internal static string DealtCardPiles {
            get {
                return ResourceManager.GetString("DealtCardPiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        internal static string Default {
            get {
                return ResourceManager.GetString("Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deselected.
        /// </summary>
        internal static string Deselected {
            get {
                return ResourceManager.GetString("Deselected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diamonds.
        /// </summary>
        internal static string Diamonds {
            get {
                return ResourceManager.GetString("Diamonds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diamonds pile.
        /// </summary>
        internal static string DiamondsPile {
            get {
                return ResourceManager.GetString("DiamondsPile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty.
        /// </summary>
        internal static string Empty {
            get {
                return ResourceManager.GetString("Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty card pile.
        /// </summary>
        internal static string EmptyCardPile {
            get {
                return ResourceManager.GetString("EmptyCardPile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extend dealt card hit target.
        /// </summary>
        internal static string ExtendDealtCardHitTarget {
            get {
                return ResourceManager.GetString("ExtendDealtCardHitTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This setting only applies using a portrait screen orientation. When checked, the hit target for each of the topmost dealt cards extends across the width of the screen. The hit target is represented by a solid colour, and the dealt card appears in the middle of the area. Extending the hit target area may make it quicker to find the topmost card in each pile when moving your finger over the screen while using a screen reader..
        /// </summary>
        internal static string ExtendDealtCardHitTargetInstructions {
            get {
                return ResourceManager.GetString("ExtendDealtCardHitTargetInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extend hit target:.
        /// </summary>
        internal static string ExtendDealtCardHitTargetSwitchLabel {
            get {
                return ResourceManager.GetString("ExtendDealtCardHitTargetSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Face-down.
        /// </summary>
        internal static string FaceDown {
            get {
                return ResourceManager.GetString("FaceDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Face-down cards cannot be selected..
        /// </summary>
        internal static string FaceDownCardsCannotBeSelected {
            get {
                return ResourceManager.GetString("FaceDownCardsCannotBeSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the Accessible Solitaire game!
        ///
        ///Please click the Menu button and review the Help content to learn how to get the best game-playing experiences for you..
        /// </summary>
        internal static string FirstRunMessage {
            get {
                return ResourceManager.GetString("FirstRunMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press the F1 key to learn about the keyboard shortcuts available in the game..
        /// </summary>
        internal static string FirstRunMessageWindows {
            get {
                return ResourceManager.GetString("FirstRunMessageWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flip layout horizontally.
        /// </summary>
        internal static string FlipGameLayoutHorizontally {
            get {
                return ResourceManager.GetString("FlipGameLayoutHorizontally", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check this option to flip the position of everything in the game horizontally. This means the Next Card button will be near the top right corner of the game rather than near the top left corner..
        /// </summary>
        internal static string FlipGameLayoutHorizontallyInstructions {
            get {
                return ResourceManager.GetString("FlipGameLayoutHorizontallyInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Flip layout:.
        /// </summary>
        internal static string FlipGameLayoutHorizontallySwitchLabel {
            get {
                return ResourceManager.GetString("FlipGameLayoutHorizontallySwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Appearance.
        /// </summary>
        internal static string GameAppearance {
            get {
                return ResourceManager.GetString("GameAppearance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game has restarted..
        /// </summary>
        internal static string GameRestarted {
            get {
                return ResourceManager.GetString("GameRestarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General Game Play.
        /// </summary>
        internal static string GeneralGamePlay {
            get {
                return ResourceManager.GetString("GeneralGamePlay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hearts.
        /// </summary>
        internal static string Hearts {
            get {
                return ResourceManager.GetString("Hearts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hearts pile.
        /// </summary>
        internal static string HeartsPile {
            get {
                return ResourceManager.GetString("HeartsPile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessible Solitaire Help.
        /// </summary>
        internal static string Help {
            get {
                return ResourceManager.GetString("Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to first face-up card is.
        /// </summary>
        internal static string HintBottommostFaceupCard {
            get {
                return ResourceManager.GetString("HintBottommostFaceupCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in.
        /// </summary>
        internal static string In {
            get {
                return ResourceManager.GetString("In", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Announce face-down card details.
        /// </summary>
        internal static string IncludeFacedownCardsInAnnouncement {
            get {
                return ResourceManager.GetString("IncludeFacedownCardsInAnnouncement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By default, when the state of the dealt card piles is announced by a screen reader, the names of the face-down cards in each pile are not included. Use this setting to include the names of face-down cards in the announcement..
        /// </summary>
        internal static string IncludeFacedownCardsInAnnouncementInstructions {
            get {
                return ResourceManager.GetString("IncludeFacedownCardsInAnnouncementInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Announce face-down cards:.
        /// </summary>
        internal static string IncludeFacedownCardsInAnnouncementSwitchLabel {
            get {
                return ResourceManager.GetString("IncludeFacedownCardsInAnnouncementSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in dealt card pile.
        /// </summary>
        internal static string InDealtCardPile {
            get {
                return ResourceManager.GetString("InDealtCardPile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in selected set.
        /// </summary>
        internal static string InSelectedSet {
            get {
                return ResourceManager.GetString("InSelectedSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Jack.
        /// </summary>
        internal static string Jack {
            get {
                return ResourceManager.GetString("Jack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Sessions.
        /// </summary>
        internal static string KeepGameAcrossSessions {
            get {
                return ResourceManager.GetString("KeepGameAcrossSessions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save the state of the current game when the app is closed, so when the app is next reopened the earlier game can be continued..
        /// </summary>
        internal static string KeepGameAcrossSessionsInstructions {
            get {
                return ResourceManager.GetString("KeepGameAcrossSessionsInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save game state:.
        /// </summary>
        internal static string KeepGameAcrossSessionsSwitchName {
            get {
                return ResourceManager.GetString("KeepGameAcrossSessionsSwitchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to F1: Show this list of keyboard shortcuts.
        ///
        ///F6: Move keyboard focus between the main areas of the game.
        ///
        ///M: Screen reader announce available moves.
        ///U: Screen reader announce topmost upturned cards.
        ///T: Screen reader announce target card piles.
        ///D: Screen reader announce dealt card piles.
        ///
        ///H: Show full help content.
        ///N: Click Next Card button.
        ///R: Restart game.
        ///Z: Show card zoom popup..
        /// </summary>
        internal static string KeyboardShortcutsList {
            get {
                return ResourceManager.GetString("KeyboardShortcutsList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following keyboard shortcuts are available in the Accessible Solitaire game..
        /// </summary>
        internal static string KeyboardShortcutsSubtitle {
            get {
                return ResourceManager.GetString("KeyboardShortcutsSubtitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyboard Shortcuts.
        /// </summary>
        internal static string KeyboardShortcutsTitle {
            get {
                return ResourceManager.GetString("KeyboardShortcutsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to King.
        /// </summary>
        internal static string King {
            get {
                return ResourceManager.GetString("King", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empty Dealt Card Pile.
        /// </summary>
        internal static string KingsOnlyToEmptyPile {
            get {
                return ResourceManager.GetString("KingsOnlyToEmptyPile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any card can be moved to an empty dealt card pile. If you&apos;d prefer that only Kings can be moved to the empty card pile, select this option..
        /// </summary>
        internal static string KingsOnlyToEmptyPileInstructions {
            get {
                return ResourceManager.GetString("KingsOnlyToEmptyPileInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only Kings to empty card piles:.
        /// </summary>
        internal static string KingsOnlyToEmptyPileSwitchName {
            get {
                return ResourceManager.GetString("KingsOnlyToEmptyPileSwitchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to landscape.
        /// </summary>
        internal static string Landscape {
            get {
                return ResourceManager.GetString("Landscape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light Blue.
        /// </summary>
        internal static string LightBlue {
            get {
                return ResourceManager.GetString("LightBlue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light Coral.
        /// </summary>
        internal static string LightCoral {
            get {
                return ResourceManager.GetString("LightCoral", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light Green.
        /// </summary>
        internal static string LightGreen {
            get {
                return ResourceManager.GetString("LightGreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press and hold on card to zoom.
        /// </summary>
        internal static string LongPressOnCard {
            get {
                return ResourceManager.GetString("LongPressOnCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press and hold on a card for the card to fill the screen. Select the number of seconds required to press and hold on the card, or select &quot;Never&quot; to turn off the press and hold..
        /// </summary>
        internal static string LongPressOnCardInstructions {
            get {
                return ResourceManager.GetString("LongPressOnCardInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seconds:.
        /// </summary>
        internal static string LongPressOnCardPickerName {
            get {
                return ResourceManager.GetString("LongPressOnCardPickerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu.
        /// </summary>
        internal static string Menu {
            get {
                return ResourceManager.GetString("Menu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Face-down cards.
        /// </summary>
        internal static string MergeFaceDownCards {
            get {
                return ResourceManager.GetString("MergeFaceDownCards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check this option if you&apos;d like all face-down cards in each dealt card pile to be merged into a single item that shows the count of face-down cards in the pile..
        /// </summary>
        internal static string MergeFaceDownCardsInstructions {
            get {
                return ResourceManager.GetString("MergeFaceDownCardsInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge face-down cards:.
        /// </summary>
        internal static string MergeFaceDownCardsSwitchLabel {
            get {
                return ResourceManager.GetString("MergeFaceDownCardsSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More cards are available to turn over.
        /// </summary>
        internal static string MoreCardsAreAvailable {
            get {
                return ResourceManager.GetString("MoreCardsAreAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to in.
        /// </summary>
        internal static string MoveAnnouncementInPile {
            get {
                return ResourceManager.GetString("MoveAnnouncementInPile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moved.
        /// </summary>
        internal static string Moved {
            get {
                return ResourceManager.GetString("Moved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All cards have been used.
        /// </summary>
        internal static string NextCardPile_FinishedCards {
            get {
                return ResourceManager.GetString("NextCardPile_FinishedCards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next card.
        /// </summary>
        internal static string NextCardPile_NextCard {
            get {
                return ResourceManager.GetString("NextCardPile_NextCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turn over cards.
        /// </summary>
        internal static string NextCardPile_TurnOverCards {
            get {
                return ResourceManager.GetString("NextCardPile_TurnOverCards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        internal static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No card.
        /// </summary>
        internal static string NoCard {
            get {
                return ResourceManager.GetString("NoCard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No cards left in remaining cards pile..
        /// </summary>
        internal static string NoCardLeft {
            get {
                return ResourceManager.GetString("NoCardLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No more face-up cards.
        /// </summary>
        internal static string NoMoreFaceupCards {
            get {
                return ResourceManager.GetString("NoMoreFaceupCards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No move.
        /// </summary>
        internal static string NoMove {
            get {
                return ResourceManager.GetString("NoMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No move is available..
        /// </summary>
        internal static string NoMoveIsAvailable {
            get {
                return ResourceManager.GetString("NoMoveIsAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No next cards left.
        /// </summary>
        internal static string NoNextCardsLeft {
            get {
                return ResourceManager.GetString("NoNextCardsLeft", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, at the moment Accessible Solitaire doesn&apos;t support changing the screen orientation while the app is running. So please either rotate the screen back to {0}, or restart the app with the screen in the desired orientation..
        /// </summary>
        internal static string NoScreenOrientationChange {
            get {
                return ResourceManager.GetString("NoScreenOrientationChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This card is not at the top of the upturned card pile, and cannot be selected..
        /// </summary>
        internal static string ObscuredUpturnedCardCannotBeSelected {
            get {
                return ResourceManager.GetString("ObscuredUpturnedCardCannotBeSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to of .
        /// </summary>
        internal static string Of {
            get {
                return ResourceManager.GetString("Of", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to off.
        /// </summary>
        internal static string Off {
            get {
                return ResourceManager.GetString("Off", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to on.
        /// </summary>
        internal static string On {
            get {
                return ResourceManager.GetString("On", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to on top.
        /// </summary>
        internal static string OnTop {
            get {
                return ResourceManager.GetString("OnTop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pile.
        /// </summary>
        internal static string Pile {
            get {
                return ResourceManager.GetString("Pile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pink.
        /// </summary>
        internal static string Pink {
            get {
                return ResourceManager.GetString("Pink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play other sounds including when dealing cards or turning over the next cards..
        /// </summary>
        internal static string PlaySoundOther {
            get {
                return ResourceManager.GetString("PlaySoundOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other sounds:.
        /// </summary>
        internal static string PlaySoundOtherSwitchLabel {
            get {
                return ResourceManager.GetString("PlaySoundOtherSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play a sound when a card move attempt is successful..
        /// </summary>
        internal static string PlaySoundSuccessfulMove {
            get {
                return ResourceManager.GetString("PlaySoundSuccessfulMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successful sound:.
        /// </summary>
        internal static string PlaySoundSuccessfulMoveSwitchLabel {
            get {
                return ResourceManager.GetString("PlaySoundSuccessfulMoveSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play a sound when a card move attempt is unsuccessful..
        /// </summary>
        internal static string PlaySoundUnsuccessfulMove {
            get {
                return ResourceManager.GetString("PlaySoundUnsuccessfulMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsuccessful sound:.
        /// </summary>
        internal static string PlaySoundUnsuccessfulMoveSwitchLabel {
            get {
                return ResourceManager.GetString("PlaySoundUnsuccessfulMoveSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Popup.
        /// </summary>
        internal static string Popup {
            get {
                return ResourceManager.GetString("Popup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to portrait.
        /// </summary>
        internal static string Portrait {
            get {
                return ResourceManager.GetString("Portrait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview sound.
        /// </summary>
        internal static string PreviewSound {
            get {
                return ResourceManager.GetString("PreviewSound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queen.
        /// </summary>
        internal static string Queen {
            get {
                return ResourceManager.GetString("Queen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to restart the game?.
        /// </summary>
        internal static string QueryRestartGame {
            get {
                return ResourceManager.GetString("QueryRestartGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Congratulations, you&apos;ve won! Would you like to start a new game?.
        /// </summary>
        internal static string QueryRestartWonGame {
            get {
                return ResourceManager.GetString("QueryRestartWonGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restart Game.
        /// </summary>
        internal static string RestartGame {
            get {
                return ResourceManager.GetString("RestartGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to revealed.
        /// </summary>
        internal static string Revealed {
            get {
                return ResourceManager.GetString("Revealed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen Reader Usage.
        /// </summary>
        internal static string ScreenReaderUsage {
            get {
                return ResourceManager.GetString("ScreenReaderUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to selected.
        /// </summary>
        internal static string Selected {
            get {
                return ResourceManager.GetString("Selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessible Solitaire Settings.
        /// </summary>
        internal static string SettingsTitle {
            get {
                return ResourceManager.GetString("SettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Card rank and suit display.
        /// </summary>
        internal static string ShowRankSuitLarge {
            get {
                return ResourceManager.GetString("ShowRankSuitLarge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check this option if you&apos;d like each card to show a large suit symbol and a large letter representing the card&apos;s rank..
        /// </summary>
        internal static string ShowRankSuitLargeInstructions {
            get {
                return ResourceManager.GetString("ShowRankSuitLargeInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show large rank and suit:.
        /// </summary>
        internal static string ShowRankSuitLargeSwitchName {
            get {
                return ResourceManager.GetString("ShowRankSuitLargeSwitchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen Reader Announcements.
        /// </summary>
        internal static string ShowScreenReaderAnnouncementButtons {
            get {
                return ResourceManager.GetString("ShowScreenReaderAnnouncementButtons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show buttons to have a screen reader announce the state of the entire game, and the moves currently available..
        /// </summary>
        internal static string ShowScreenReaderAnnouncementButtonsInstructions {
            get {
                return ResourceManager.GetString("ShowScreenReaderAnnouncementButtonsInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show screen reader buttons:.
        /// </summary>
        internal static string ShowScreenReaderAnnouncementButtonsSwitchLabel {
            get {
                return ResourceManager.GetString("ShowScreenReaderAnnouncementButtonsSwitchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show zoom popup.
        /// </summary>
        internal static string ShowZoomPopup {
            get {
                return ResourceManager.GetString("ShowZoomPopup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sounds.
        /// </summary>
        internal static string Sounds {
            get {
                return ResourceManager.GetString("Sounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spades.
        /// </summary>
        internal static string Spades {
            get {
                return ResourceManager.GetString("Spades", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spades pile.
        /// </summary>
        internal static string SpadesPile {
            get {
                return ResourceManager.GetString("SpadesPile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suit Colours.
        /// </summary>
        internal static string SuitColours {
            get {
                return ResourceManager.GetString("SuitColours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clubs:.
        /// </summary>
        internal static string SuitColoursClubsPickerLabel {
            get {
                return ResourceManager.GetString("SuitColoursClubsPickerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diamonds:.
        /// </summary>
        internal static string SuitColoursDiamondsPickerLabel {
            get {
                return ResourceManager.GetString("SuitColoursDiamondsPickerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hearts:.
        /// </summary>
        internal static string SuitColoursHeartsPickerLabel {
            get {
                return ResourceManager.GetString("SuitColoursHeartsPickerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you&apos;d prefer to have cards show colours other than the traditional black and red for the four suits, select your preferred colours here..
        /// </summary>
        internal static string SuitColoursInstructions {
            get {
                return ResourceManager.GetString("SuitColoursInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spades:.
        /// </summary>
        internal static string SuitColoursSpadesPickerLabel {
            get {
                return ResourceManager.GetString("SuitColoursSpadesPickerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target card pile.
        /// </summary>
        internal static string TargetCardPile {
            get {
                return ResourceManager.GetString("TargetCardPile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target card piles.
        /// </summary>
        internal static string TargetCardPiles {
            get {
                return ResourceManager.GetString("TargetCardPiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to then.
        /// </summary>
        internal static string Then {
            get {
                return ResourceManager.GetString("Then", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no upturned cards shown.
        /// </summary>
        internal static string ThereAreNoUpturnedCards {
            get {
                return ResourceManager.GetString("ThereAreNoUpturnedCards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to to.
        /// </summary>
        internal static string To {
            get {
                return ResourceManager.GetString("To", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Top upturned card is.
        /// </summary>
        internal static string TopUpturnedCardIs {
            get {
                return ResourceManager.GetString("TopUpturnedCardIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Touch Interaction.
        /// </summary>
        internal static string TouchInteraction {
            get {
                return ResourceManager.GetString("TouchInteraction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unselected.
        /// </summary>
        internal static string Unselected {
            get {
                return ResourceManager.GetString("Unselected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upturned card pile.
        /// </summary>
        internal static string UpturnedCardPile {
            get {
                return ResourceManager.GetString("UpturnedCardPile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upturned Cards.
        /// </summary>
        internal static string UpturnedCards {
            get {
                return ResourceManager.GetString("UpturnedCards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: For screen reader&apos;s notifications to work properly, the Switch Dynamic Areas and Announcements feature, available on the VoiceOver rotor, must be turned on..
        /// </summary>
        internal static string VoiceOverScreenReaderWarning {
            get {
                return ResourceManager.GetString("VoiceOverScreenReaderWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to White.
        /// </summary>
        internal static string White {
            get {
                return ResourceManager.GetString("White", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yellow.
        /// </summary>
        internal static string Yellow {
            get {
                return ResourceManager.GetString("Yellow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        internal static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
    }
}
