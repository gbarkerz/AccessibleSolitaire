<toolkit:Popup xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
               xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
               xmlns:local_views="clr-namespace:Sa11ytaire4All.Views"
               xmlns:resources="clr-namespace:Sa11ytaire4All"
               xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
               xmlns:windows="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.WindowsSpecific;assembly=Microsoft.Maui.Controls"
               Color="Transparent"
               x:Name="CardPopupInstance"
               x:Class="Sa11ytaire4All.Views.CardPopup">

    <!-- Barker: In an attempt to use some compiled binding, I added the following to the Popup XAML above. 
        But having done that, on release builds the popup was empty, so I apparently broke the binding.
        (This didn't happen on debug builds.) So remove this for now, and try to get compiled binding 
        working at some point in the future. -->
    <!--x:DataType="{x:Type local_views:CardPopup}"-->

    <!-- *** BUILD WARNINGS ***
        Around ten of these:
        XamlC warning XC0022: Binding could be compiled to improve runtime performance if x:DataType is specified. 
            See https://learn.microsoft.com/dotnet/maui/fundamentals/data-binding/compiled-bindings for more information.    
    -->

    <toolkit:Popup.Resources>
        <local_views:SuitSuitColoursToColor x:Key="SuitSuitColoursToColor" />
        <local_views:CardToCardPopupAccessibleName x:Key="CardToCardPopupAccessibleName" />
        <local_views:CardToCardImageConverter x:Key="CardToCardImageConverter" />
        <local_views:PictureCardToCardImageConverter x:Key="PictureCardToCardImageConverter" />
    </toolkit:Popup.Resources>

    <Grid
        BackgroundColor="Transparent"
        Margin="8">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border
            StrokeThickness="1"
            Stroke="{AppThemeBinding Light=Black, Dark=White}">

            <Image Grid.ColumnSpan="2" x:Name="TintedCardImage"
                BackgroundColor="{AppThemeBinding Light=White, Dark=Black}"
                Source="{Binding Card, Mode=OneWay, Converter={StaticResource CardToCardImageConverter}}">

                <Image.Behaviors>

                    <toolkit:IconTintColorBehavior
                        BindingContext="{Binding Path=BindingContext, 
                            Source={x:Reference TintedCardImage}}">

                        <toolkit:IconTintColorBehavior.TintColor>
                            <MultiBinding Mode="OneWay" 
                                    Converter="{StaticResource SuitSuitColoursToColor}">
                                <Binding Path="Card" />
                                <Binding Path="AutomationId" />
                                <Binding Path="SuitColoursClubs" />
                                <Binding Path="SuitColoursDiamonds" />
                                <Binding Path="SuitColoursHearts" />
                                <Binding Path="SuitColoursSpades" />
                            </MultiBinding>
                        </toolkit:IconTintColorBehavior.TintColor>

                    </toolkit:IconTintColorBehavior>
                </Image.Behaviors>
            </Image>

        </Border>

        <!-- Note: This accessibility is set based on the Android TalkBack experience, NOT the earlier Samsung "Screen Reader". -->

        <Image Grid.ColumnSpan="2"
            SemanticProperties.Description="{Binding Card, Mode=OneWay, Converter={StaticResource CardToCardPopupAccessibleName}}"
            BackgroundColor="Transparent"
            Source="{Binding Card, Mode=OneWay, Converter={StaticResource PictureCardToCardImageConverter}}">
        </Image>

        <Button Grid.Column="1" Grid.Row="1"
            windows:VisualElement.AccessKey="C"
            TextColor="{StaticResource White}" BackgroundColor="{StaticResource Primary}"
            Margin="8,0,0,0" Padding="8"
            Text="{x:Static resources:Strings.StringResources.Close}" 
            Clicked="CloseButton_Clicked" />

    </Grid>

</toolkit:Popup>
